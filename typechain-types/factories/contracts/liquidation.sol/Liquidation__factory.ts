/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Liquidation,
  LiquidationInterface,
} from "../../../contracts/liquidation.sol/Liquidation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_synthlpAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_borrowerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_swapRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "SynthLp",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s_r",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_borrowerAddress",
        type: "address",
      },
    ],
    name: "setBorrowerAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newRate",
        type: "uint256",
      },
    ],
    name: "setSwapRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "setSynthLp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swapSynthlpToToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "swapTokenToSynthlp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b0938038062001b098339818101604052810190620000379190620003e6565b620000576200004b620000a560201b60201c565b620000ad60201b60201c565b62000068816200017160201b60201c565b62000079826200018b60201b60201c565b6200008a84620001df60201b60201c565b6200009b836200023360201b60201c565b50505050620004db565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001816200028760201b60201c565b8060038190555050565b6200019b6200028760201b60201c565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620001ef6200028760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002436200028760201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b62000297620000a560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002bd6200031860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000316576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200030d90620004b9565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003738262000346565b9050919050565b620003858162000366565b81146200039157600080fd5b50565b600081519050620003a5816200037a565b92915050565b6000819050919050565b620003c081620003ab565b8114620003cc57600080fd5b50565b600081519050620003e081620003b5565b92915050565b6000806000806080858703121562000403576200040262000341565b5b6000620004138782880162000394565b9450506020620004268782880162000394565b9350506040620004398782880162000394565b92505060606200044c87828801620003cf565b91505092959194509250565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620004a160208362000458565b9150620004ae8262000469565b602082019050919050565b60006020820190508181036000830152620004d48162000492565b9050919050565b61161e80620004eb6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610153578063a52af6a014610171578063aaa6817f1461018d578063c2412676146101a9578063f2fde38b146101c7578063f4cde469146101e3576100b4565b8063144fa6d7146100b9578063162e4ba9146100d55780631ae213a5146100f357806343466bed14610111578063715018a61461012d57806379a1377814610137575b600080fd5b6100d360048036038101906100ce9190610dff565b6101ff565b005b6100dd61024b565b6040516100ea9190610e45565b60405180910390f35b6100fb610251565b6040516101089190610ebf565b60405180910390f35b61012b60048036038101906101269190610f06565b610277565b005b610135610686565b005b610151600480360381019061014c9190610dff565b61069a565b005b61015b6106e6565b6040516101689190610f42565b60405180910390f35b61018b60048036038101906101869190610f06565b61070f565b005b6101a760048036038101906101a29190610dff565b610b1e565b005b6101b1610b6a565b6040516101be9190610ebf565b60405180910390f35b6101e160048036038101906101dc9190610dff565b610b90565b005b6101fd60048036038101906101f89190610f06565b610c14565b005b610207610c26565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610307576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fe90610fba565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103649190610f42565b602060405180830381865afa158015610381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a59190610fef565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104049190610f42565b602060405180830381865afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190610fef565b90506000831161048a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104819061108e565b60405180910390fd5b828110156104cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c4906110fa565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161052c9392919061111a565b6020604051808303816000875af115801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190611189565b50600061059a60035461058c606487610ca490919063ffffffff16565b610cba90919063ffffffff16565b9050828111156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d690611228565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161063c929190611248565b6020604051808303816000875af115801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f9190611189565b5050505050565b61068e610c26565b6106986000610cd0565b565b6106a2610c26565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079690610fba565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107fc9190610f42565b602060405180830381865afa158015610819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d9190610fef565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161089c9190610f42565b602060405180830381865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd9190610fef565b905060008311610922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610919906112e3565b60405180910390fd5b82811015610965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9061134f565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016109c49392919061111a565b6020604051808303816000875af11580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a079190611189565b506000610a32600354610a24606487610cba90919063ffffffff16565b610ca490919063ffffffff16565b905082811115610a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6e906113e1565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ad4929190611248565b6020604051808303816000875af1158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b179190611189565b5050505050565b610b26610c26565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b98610c26565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bff90611473565b60405180910390fd5b610c1181610cd0565b50565b610c1c610c26565b8060038190555050565b610c2e610d94565b73ffffffffffffffffffffffffffffffffffffffff16610c4c6106e6565b73ffffffffffffffffffffffffffffffffffffffff1614610ca2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c99906114df565b60405180910390fd5b565b60008183610cb2919061152e565b905092915050565b60008183610cc891906115b7565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dcc82610da1565b9050919050565b610ddc81610dc1565b8114610de757600080fd5b50565b600081359050610df981610dd3565b92915050565b600060208284031215610e1557610e14610d9c565b5b6000610e2384828501610dea565b91505092915050565b6000819050919050565b610e3f81610e2c565b82525050565b6000602082019050610e5a6000830184610e36565b92915050565b6000819050919050565b6000610e85610e80610e7b84610da1565b610e60565b610da1565b9050919050565b6000610e9782610e6a565b9050919050565b6000610ea982610e8c565b9050919050565b610eb981610e9e565b82525050565b6000602082019050610ed46000830184610eb0565b92915050565b610ee381610e2c565b8114610eee57600080fd5b50565b600081359050610f0081610eda565b92915050565b600060208284031215610f1c57610f1b610d9c565b5b6000610f2a84828501610ef1565b91505092915050565b610f3c81610dc1565b82525050565b6000602082019050610f576000830184610f33565b92915050565b600082825260208201905092915050565b7f596f7520617265206e6f742074686520626f72726f7765720000000000000000600082015250565b6000610fa4601883610f5d565b9150610faf82610f6e565b602082019050919050565b60006020820190508181036000830152610fd381610f97565b9050919050565b600081519050610fe981610eda565b92915050565b60006020828403121561100557611004610d9c565b5b600061101384828501610fda565b91505092915050565b7f53796e74684c7020616d6f756e742073686f756c64206265206772656174657260008201527f207468616e203000000000000000000000000000000000000000000000000000602082015250565b6000611078602783610f5d565b91506110838261101c565b604082019050919050565b600060208201905081810360008301526110a78161106b565b9050919050565b7f596f752068617665206e6f7420656e6f7567682053796e74684c700000000000600082015250565b60006110e4601b83610f5d565b91506110ef826110ae565b602082019050919050565b60006020820190508181036000830152611113816110d7565b9050919050565b600060608201905061112f6000830186610f33565b61113c6020830185610f33565b6111496040830184610e36565b949350505050565b60008115159050919050565b61116681611151565b811461117157600080fd5b50565b6000815190506111838161115d565b92915050565b60006020828403121561119f5761119e610d9c565b5b60006111ad84828501611174565b91505092915050565b7f5468657265206973206e6f7420656e6f75676820746f6b656e20696e20636f6e60008201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b6000611212602583610f5d565b915061121d826111b6565b604082019050919050565b6000602082019050818103600083015261124181611205565b9050919050565b600060408201905061125d6000830185610f33565b61126a6020830184610e36565b9392505050565b7f546f6b656e20616d6f756e742073686f756c642062652067726561746572207460008201527f68616e2030000000000000000000000000000000000000000000000000000000602082015250565b60006112cd602583610f5d565b91506112d882611271565b604082019050919050565b600060208201905081810360008301526112fc816112c0565b9050919050565b7f596f752068617665206e6f7420656e6f75676820746f6b656e00000000000000600082015250565b6000611339601983610f5d565b915061134482611303565b602082019050919050565b600060208201905081810360008301526113688161132c565b9050919050565b7f5468657265206973206e6f7420656e6f7567682053796e74686c7020696e206360008201527f6f6e747261637400000000000000000000000000000000000000000000000000602082015250565b60006113cb602783610f5d565b91506113d68261136f565b604082019050919050565b600060208201905081810360008301526113fa816113be565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061145d602683610f5d565b915061146882611401565b604082019050919050565b6000602082019050818103600083015261148c81611450565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114c9602083610f5d565b91506114d482611493565b602082019050919050565b600060208201905081810360008301526114f8816114bc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061153982610e2c565b915061154483610e2c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561157d5761157c6114ff565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006115c282610e2c565b91506115cd83610e2c565b9250826115dd576115dc611588565b5b82820490509291505056fea264697066735822122056a5f87b0699a9e307531e2452e19f91bff893db7e1080197bae210b8720acd864736f6c634300080a0033";

type LiquidationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Liquidation__factory extends ContractFactory {
  constructor(...args: LiquidationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _synthlpAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _borrowerAddress: PromiseOrValue<string>,
    _swapRate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Liquidation> {
    return super.deploy(
      _synthlpAddress,
      _tokenAddress,
      _borrowerAddress,
      _swapRate,
      overrides || {}
    ) as Promise<Liquidation>;
  }
  override getDeployTransaction(
    _synthlpAddress: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _borrowerAddress: PromiseOrValue<string>,
    _swapRate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _synthlpAddress,
      _tokenAddress,
      _borrowerAddress,
      _swapRate,
      overrides || {}
    );
  }
  override attach(address: string): Liquidation {
    return super.attach(address) as Liquidation;
  }
  override connect(signer: Signer): Liquidation__factory {
    return super.connect(signer) as Liquidation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidationInterface {
    return new utils.Interface(_abi) as LiquidationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Liquidation {
    return new Contract(address, _abi, signerOrProvider) as Liquidation;
  }
}
