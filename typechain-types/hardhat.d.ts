/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router01__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "Deployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Deployer__factory>;
    getContractFactory(
      name: "EnUSD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EnUSD__factory>;
    getContractFactory(
      name: "ETHDEXV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETHDEXV1__factory>;
    getContractFactory(
      name: "Convex",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Convex__factory>;
    getContractFactory(
      name: "ConvexReward",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConvexReward__factory>;
    getContractFactory(
      name: "Curve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Curve__factory>;
    getContractFactory(
      name: "ETHSynthChefV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETHSynthChefV1__factory>;
    getContractFactory(
      name: "ETHSynthFactoryV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETHSynthFactoryV1__factory>;
    getContractFactory(
      name: "ETHSynthV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ETHSynthV1__factory>;
    getContractFactory(
      name: "IMasterChef",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMasterChef__factory>;
    getContractFactory(
      name: "ISynthChef",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthChef__factory>;
    getContractFactory(
      name: "IETHDEXV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IETHDEXV1__factory>;
    getContractFactory(
      name: "ILender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILender__factory>;
    getContractFactory(
      name: "IPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPausable__factory>;
    getContractFactory(
      name: "Lender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lender__factory>;
    getContractFactory(
      name: "Lending",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lending__factory>;
    getContractFactory(
      name: "Liquidation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Liquidation__factory>;
    getContractFactory(
      name: "PausableAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableAccessControl__factory>;
    getContractFactory(
      name: "Pauser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pauser__factory>;
    getContractFactory(
      name: "Pool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pool__factory>;
    getContractFactory(
      name: "IBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBridge__factory>;
    getContractFactory(
      name: "Ifactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ifactory__factory>;
    getContractFactory(
      name: "Ipool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ipool__factory>;
    getContractFactory(
      name: "IsynthChef",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IsynthChef__factory>;
    getContractFactory(
      name: "Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Router__factory>;
    getContractFactory(
      name: "SimpleToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleToken__factory>;
    getContractFactory(
      name: "SilentStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SilentStaking__factory>;
    getContractFactory(
      name: "PausableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableMock__factory>;
    getContractFactory(
      name: "IERC20Extended",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Extended__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV2Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router01>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "Deployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Deployer>;
    getContractAt(
      name: "EnUSD",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EnUSD>;
    getContractAt(
      name: "ETHDEXV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETHDEXV1>;
    getContractAt(
      name: "Convex",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Convex>;
    getContractAt(
      name: "ConvexReward",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ConvexReward>;
    getContractAt(
      name: "Curve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Curve>;
    getContractAt(
      name: "ETHSynthChefV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETHSynthChefV1>;
    getContractAt(
      name: "ETHSynthFactoryV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETHSynthFactoryV1>;
    getContractAt(
      name: "ETHSynthV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ETHSynthV1>;
    getContractAt(
      name: "IMasterChef",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMasterChef>;
    getContractAt(
      name: "ISynthChef",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISynthChef>;
    getContractAt(
      name: "IETHDEXV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IETHDEXV1>;
    getContractAt(
      name: "ILender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILender>;
    getContractAt(
      name: "IPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPausable>;
    getContractAt(
      name: "Lender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Lender>;
    getContractAt(
      name: "Lending",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Lending>;
    getContractAt(
      name: "Liquidation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Liquidation>;
    getContractAt(
      name: "PausableAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableAccessControl>;
    getContractAt(
      name: "Pauser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pauser>;
    getContractAt(
      name: "Pool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pool>;
    getContractAt(
      name: "IBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBridge>;
    getContractAt(
      name: "Ifactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ifactory>;
    getContractAt(
      name: "Ipool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ipool>;
    getContractAt(
      name: "IsynthChef",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IsynthChef>;
    getContractAt(
      name: "Router",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Router>;
    getContractAt(
      name: "SimpleToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleToken>;
    getContractAt(
      name: "SilentStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SilentStaking>;
    getContractAt(
      name: "PausableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableMock>;
    getContractAt(
      name: "IERC20Extended",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Extended>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
